{"ast":null,"code":"var _jsxFileName = \"/Users/dhanukesharwani/Desktop/zedlabzz/src/components/mainWindow.js\",\n  _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport OnSlideWindow from './onSlideWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainWindow() {\n  _s();\n  const ref = useRef(null);\n  const handleClick = () => {\n    var _ref$current;\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen bg-[#2C5448] flex flex-col justify-center items-center space-y-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold font-mono text-center space-y-4 text-white md:text-2xl text-xl\",\n        children: \"In this task I have used useRef hook to scroll to another div This is the Primary div which has button which onclick slides to another div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"border\",\n        children: \"scroll to div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OnSlideWindow, {\n      ref: ref,\n      text: \"Screen is scrolled to this component.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(MainWindow, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n_c = MainWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWindow\");","map":{"version":3,"names":["useRef","OnSlideWindow","jsxDEV","_jsxDEV","MainWindow","_s","ref","handleClick","_ref$current","current","scrollIntoView","behavior","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/Users/dhanukesharwani/Desktop/zedlabzz/src/components/mainWindow.js"],"sourcesContent":["import { useRef } from 'react';\nimport OnSlideWindow from './onSlideWindow';\n\nexport default function MainWindow() {\n  const ref = useRef(null);\n\n  const handleClick = () => {\n    ref.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div>\n      <div className=\"h-screen bg-[#2C5448] flex flex-col justify-center items-center space-y-10\">\n        <p className=\"font-semibold font-mono text-center space-y-4 text-white md:text-2xl text-xl\">\n          In this task I have used useRef hook to scroll to another div This is\n          the Primary div which has button which onclick slides to another div\n        </p>\n        <button onClick={handleClick} className=\"border\">\n          scroll to div\n        </button>\n      </div>\n      <OnSlideWindow ref={ref} text=\"Screen is scrolled to this component.\" />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,GAAG,GAAGN,MAAM,CAAC,IAAI,CAAC;EAExB,MAAMO,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAC,YAAA;IACxB,CAAAA,YAAA,GAAAF,GAAG,CAACG,OAAO,cAAAD,YAAA,uBAAXA,YAAA,CAAaE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACrD,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAKU,SAAS,EAAC,4EAA4E;MAAAD,QAAA,gBACzFT,OAAA;QAAGU,SAAS,EAAC,8EAA8E;QAAAD,QAAA,EAAC;MAG5F;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJd,OAAA;QAAQe,OAAO,EAAEX,WAAY;QAACM,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAEjD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNd,OAAA,CAACF,aAAa;MAACK,GAAG,EAAEA,GAAI;MAACa,IAAI,EAAC;IAAuC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACZ,EAAA,CArBuBD,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}